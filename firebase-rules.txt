rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function belongsToCompany(companyId) {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
      
      // Allow users to update their own password
      allow update: if isOwner(userId) && 
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['password']);
    }

    // Companies collection
    match /companies/{companyId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories collection
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Formulas collection
    match /formulas/{formulaId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isOwner(resource.data.userId) ||
        belongsToCompany(resource.data.companyId)
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Promo codes collection
    match /promoCodes/{promoCodeId} {
      // Anyone can read active promo codes
      allow read: if true;
      // Only admins can create, update, or delete promo codes
      allow write: if isAdmin();
    }
  }
}